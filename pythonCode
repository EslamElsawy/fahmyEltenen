'''
Created on Mar 22, 2013

@author: Ahmed
'''
from numpy import *;
from matplotlib import *;
from matplotlib.pyplot import *;
from matplotlib.image import *;
#from PIL import Image;
#

#im = array(Image.open("testFile//image2.pgm"));
#print im.shape
#imshow(im,cmap='Greys_r');
#show();

count = 0;
myImages = random.rand(400,112,92);
for i in range(1,41):
    folderName = 's'+str(i);
    for j in range(1,11):
        fileName = str(j) + '.pgm';
#        im = array(Image.open("Faces//"+folderName+"//"+fileName));
        im = imread("Faces//"+folderName+"//"+fileName);
        myImages[count] = im;
        count = count + 1;
        
print "Images Count" + str(count)

def eclidDistance(image1,image2):
    dist = 0;
    for i in range(0,112):
        for j in range(0,92):
            dist= dist + sqrt(abs(image1[i][j]-image2[i][j]));
    return dist;

def manhattenDistance(image1,image2):
    dist = 0;
    for i in range(0,112):
        for j in range(0,92):
            dist= dist + abs(image1[i][j]-image2[i][j]);
    return dist;


AdjMatrix = random.rand(400,400);
for i in range(0,400):
    for j in range(0,400):
        if(i == j):
            AdjMatrix[i][j]=0;
        else:
            AdjMatrix[i][j]=manhattenDistance(myImages[i],myImages[j]);    


print AdjMatrix;            
savetxt("Adjacency Matrix.txt",AdjMatrix)
new_data = np.loadtxt('Adjacency Matrix.txt')
print new_data


def KNN(AdjMatrix,K):
    KNNAdjacencyList = [];
    for i in range(0,rows):
        KNNAdjacencyList.append([]);
        temp = deepcopy(AdjMatrix[i,:])
        temp.sort();
        temp2 = temp[::-1];
        threshold = temp2[K];
        for j in range(0,cols):
            if(AdjMatrix[i][j]>threshold):
                KNNAdjacencyList[i].append([j,AdjMatrix[i][j]]);
    return KNNAdjacencyList;
